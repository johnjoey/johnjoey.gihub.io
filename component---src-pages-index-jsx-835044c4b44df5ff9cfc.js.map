{"version":3,"sources":["webpack:///./src/components/layouts/MainLayout.jsx","webpack:///./src/components/common/Seo.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/ui/images/Mong.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Main","_ref","children","react_default","a","createElement","propTypes","PropTypes","node","isRequired","SEO","description","lang","meta","keywords","title","site","_2417117884","data","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","string","arrayOf","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","query","render","object","func","Image","gatsby_browser_entry_StaticQuery","gatsby_image_default","fluid","placeholderImage","childImageSharp","_124856360","items","url","year","map","href","className","target","rel","IndexPage","layouts_MainLayout","Seo","style","maxWidth","width","Mong","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-jsx-835044c4b44df5ff9cfc.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MainLayout.css';\r\n\r\nconst Main = ({ children }) => (\r\n  <div>\r\n    { children }\r\n  </div>\r\n);\r\n\r\nMain.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({\r\n  description, lang, meta, keywords, title,\r\n}) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: 'description',\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: 'og:title',\r\n          content: title,\r\n        },\r\n        {\r\n          property: 'og:description',\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: 'og:type',\r\n          content: 'website',\r\n        },\r\n        {\r\n          name: 'twitter:card',\r\n          content: 'summary',\r\n        },\r\n        {\r\n          name: 'twitter:creator',\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: 'twitter:title',\r\n          content: title,\r\n        },\r\n        {\r\n          name: 'twitter:description',\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n              name: 'keywords',\r\n              content: keywords.join(', '),\r\n            }\r\n            : [],\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: [],\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.string),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nSEO.defaultProps = {\r\n  description: 'The personal website/portfolio of John Croker.',\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: [],\r\n};\r\n\r\nexport default SEO;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nconst Image = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        placeholderImage: file(relativePath: { eq: \"mong.png\" }) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 300) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\r\n  />\r\n);\r\nexport default Image;\r\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\n\r\nimport Layout from '../components/layouts/MainLayout';\r\nimport SEO from '../components/common/Seo';\r\nimport Mong from '../components/ui/images/Mong';\r\n\r\nconst sites = [\r\n  {\r\n    name: 'Financial Services Expo',\r\n    url: 'https://www.financialservicesexpo.co.uk',\r\n    year: '2019',\r\n  },\r\n  {\r\n    name: 'Project Insights',\r\n    url: 'https://www.project-insights.co.uk',\r\n    year: '2019',\r\n  },\r\n  {\r\n    name: 'Front Events',\r\n    url: 'https://www.frontevents.co.uk',\r\n    year: '2017',\r\n  },\r\n];\r\n\r\nconst items = sites.map(site => <li><a href={site.url} className=\"text-red-500 hover:text-red-300\" target=\"_blank\" rel=\"noopener noreferrer\">{site.name}</a></li>);\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <main className=\"relative font-serif flex justify-center items-center min-h-screen\">\r\n      <SEO title=\"Home\" keywords={['John Croker', 'portfolio', 'website']} />\r\n\r\n      <div className=\"flex flex-col p-5\" style={{ maxWidth: '700px' }}>\r\n        <div style={{ width: '300px' }}>\r\n          <Mong />\r\n        </div>\r\n\r\n        <h1 className=\"text-3xl md:text-4xl my-3\">Hi, I&apos;m John Croker —</h1>\r\n        <h2 className=\"mb-3\">A full-stack developer who helped make:</h2>\r\n\r\n        <ul className=\"list-disc ml-6 leading-relaxed\">\r\n          {items}\r\n        </ul>\r\n\r\n        <p className=\"mt-3 mb-5\">\r\n          {'I\\'m currently work at '}\r\n          <a href=\"https://www.barcadiamedia.co.uk/\" className=\"text-red-500 hover:text-red-300\">Barcadia Media</a>\r\n          {'. To get in touch, write to '}\r\n          <a href=\"mailto:jj.croker@gmail.com\" className=\"text-red-500 hover:text-red-300\">jj.croker@gmail.com</a>\r\n          {'.'}\r\n        </p>\r\n        <div>\r\n          <a href=\"https://github.com/johnjoey\" className=\"mr-3 inline-block bg-red-500 hover:bg-red-300 text-white py-2 px-4 border border-red-500 hover:border-transparent rounded\">Github</a>\r\n          <a href=\"/JohnCroker.pdf\" className=\"inline-block bg-transparent hover:border-red-300 text-red-500 hover:text-red-300 py-2 px-4 border border-red-500 rounded\">Résumé</a>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </Layout>\r\n);\r\n\r\nexport default IndexPage;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}